# ポートフォリオ制作
## 目的
- 個人アプリを作成する場合にいきなりコードを書き始めてしまうことが1番の失敗要因なのでそれを防ぐ
- コードから書き始めると、実装途中で仕様や画面遷移などの不整合が発覚し、せっかく実装した画面や機能が使い物にならなくなるなど、大きく手戻りが発生するリスクが高い
- あらかじめしっかりと準備をしておくことで、実装着手から完成までスムーズに進めることができるようになる


## アドバイス
- 「一言でアプリを説明」できる状態にまで具体化させることが重要
- 日本でのターゲットユーザーが約1〜5万人程度になるくらいニッチなものにすると良い
- 基本的にコアな機能だけに絞った状態でファーストリリースする
  - 具体的な画面数で言うと、だいたい６画面程度に収まる程度が推奨

# 事前準備
## 企画
- コンセプト
  - アプリ名: 名前だけでアプリの用途がわかるもの
    - 
    - 
  - 一言説明: 一言でアプリの概要を説明
    - 
    - 
  - 目的: アプリが達成すべき目的の定義
    - 
    - 
- 要件・機能整理
  - 要件: アプリの目的を達成するための「要件」（満たすべき条件）
    - 
    - 
  - 機能: 要件を満たすために必要な「機能」
    - 
    - 

## ワイヤーフレーム作成
- diagrams(他のツールでも可)を使ってアプリ画面の骨組みを作成する
  - 使い方: https://bit.ly/3AJavyU
- 参考ワイヤーフレーム: https://bit.ly/3HlLSv9
- テンプレート: https://bit.ly/3IJaM7P

## 機能仕様書作成
- 参考教材: https://bit.ly/3sOCVE7
- 画面: アルファベットを順番に割り振る
- 画面名: 画面に対して分かりやすい名前を付ける
- 部品名: 画面に配置する部品名を付ける
- UIクラス: 部品を表現する際のUIクラスを記載する
- 挙動: 部品を操作した際の処理内容を記入する
- 必要なデータ: 部品を表現するために必要なデータを記入する

## データ設計
- 項目: 「機能仕様書作成」シートの「必要なデータ」項目で洗い出した項目を転記する
- 取得方法: データをどの様にアプリ上に用意(取得)すればよいか記入
- 参考教材: https://ios-academia.com/document/app-data-notes/

## データモデル作成
- モデル名
   - 「データ設計」シート上で定義した各項目データを適切な粒度と組み合わせてモデル化する
   - データをまとめた際にそのデータの塊を分かりやすく表現した場合のモデル名を考えて記入
- 型: データを表現するSwiftの型を記入
- 説明: データの説明を記入する
- 必須項目: データモデルにとってそのプロパティが必須項目の場合は「* 」を記入する
 